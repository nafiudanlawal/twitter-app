[{"/home/zentech/projects/twitter-app/src/index.js":"1","/home/zentech/projects/twitter-app/src/App.js":"2","/home/zentech/projects/twitter-app/src/left-column/menu.js":"3","/home/zentech/projects/twitter-app/src/reportWebVitals.js":"4","/home/zentech/projects/twitter-app/src/main_components/PageHeader.js":"5","/home/zentech/projects/twitter-app/src/main_components/TweetForm.js":"6","/home/zentech/projects/twitter-app/src/main_components/ProgressCircle.js":"7"},{"size":500,"mtime":1606173745082,"results":"8","hashOfConfig":"9"},{"size":1355,"mtime":1606445634618,"results":"10","hashOfConfig":"9"},{"size":630,"mtime":1606562937528,"results":"11","hashOfConfig":"9"},{"size":362,"mtime":1606173745082,"results":"12","hashOfConfig":"9"},{"size":349,"mtime":1606562959404,"results":"13","hashOfConfig":"9"},{"size":4555,"mtime":1606604537255,"results":"14","hashOfConfig":"9"},{"size":1419,"mtime":1606603135719,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"z2q9oa",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/zentech/projects/twitter-app/src/index.js",[],["33","34"],"/home/zentech/projects/twitter-app/src/App.js",[],"/home/zentech/projects/twitter-app/src/left-column/menu.js",[],"/home/zentech/projects/twitter-app/src/reportWebVitals.js",[],["35","36"],"/home/zentech/projects/twitter-app/src/main_components/PageHeader.js",[],"/home/zentech/projects/twitter-app/src/main_components/TweetForm.js",["37"],"//import DpImagePlacholder from \"../../public/images/dp-placeholder.jpg\";\nimport { ReactComponent as ImageIcon }from \"../icons/image.svg\";\nimport { ReactComponent as ScheduleIcon }from \"../icons/schedule.svg\";\nimport { ReactComponent as PollIcon }from \"../icons/poll.svg\";\nimport { ReactComponent as GifIcon }from \"../icons/gif.svg\";\nimport { ReactComponent as EmojiIcon }from \"../icons/emoji.svg\";\nimport { ReactComponent as GlobeIcon }from \"../icons/globe.svg\";\nimport { ReactComponent as PlusCircleIcon }from \"../icons/plusCircle.svg\";\nimport TextareaAutosize from 'react-textarea-autosize';\nimport { useState } from \"react\";\nimport ProgressCircle from \"./ProgressCircle\";\n\nconst maxLength = 255;\nfunction TweetForm(props) {\n    \n    const [text, setText] = useState(\"\");\n    const [progressCirclePercentage, setProgressCirclePercentage] = useState(0);\n    const [progressCircleText, setProgressCircleText] = useState(\"\");\n    const [progressCircleStyle, setProgressCircleStyle] = useState(\"\");\n    \n\n    const textChanged = (event, setText1 = setText) => {\n        const value = event.target.value;\n        setText1(value);\n\n        let lengthPercentage = (value.length / maxLength) * 100;\n        \n        // Put text of count to maxLength\n        if( value.length < maxLength  - 20){\n            if ( lengthPercentage >= 0 && lengthPercentage <= 100 ) {\n                setProgressCirclePercentage(lengthPercentage)\n            }\n        }else if(value.length > maxLength  - 20 && value.length <= maxLength){\n            setProgressCirclePercentage(lengthPercentage);\n            setProgressCircleText(maxLength -  value.length);\n        }else{\n            \n        }\n        \n    };\n    \n    return ( \n        <div className=\"TweetForm\" >\n            <div className=\"LeftDP\" >\n                <div className=\"DpHolder\">\n                    <img src=\"/images/dp-placeholder.jpg\" alt =\"DpImagePlacholder\" />\n                </div>\n            </div> \n            <div className=\"FormArea\" >\n                <div className=\"FormBody\">\n                    <div className=\"\">\n                        <TextareaAutosize \n                        autoFocus \n                        value={text} \n                        placeholder=\"What's happening?\"\n                        onChange={textChanged}\n                        cols=\"47\"\n                        />\n                    </div>\n                   <div className=\"publicity-area\">\n                       <button className=\"PublicityButton\">\n                           <span className=\"icon\"><GlobeIcon /></span>\n                           Everyone can reply\n                        </button>\n                   </div>\n                    <div className=\"divider\"></div>\n                </div>\n                \n                <div className=\"FormBottom\">\n                    <div className=\"IconsHolder\">\n                        <ul className=\"IconButtonsList\">\n                            <li className=\"IconButtonsListItem\">\n                                <ImageIcon />\n                            </li>\n                            <li className=\"IconButtonsListItem\">\n                                <GifIcon />\n                            </li>\n                            <li className=\"IconButtonsListItem\">\n                                <PollIcon />\n                            </li>\n                            <li className=\"IconButtonsListItem\">\n                                <EmojiIcon />\n                            </li>\n                            <li className=\"IconButtonsListItem\">\n                                <ScheduleIcon />\n                            </li>\n                        </ul>\n                    </div>\n                    <div className=\"FloatRightSide\">\n                        <div className=\"TextContentStat\">\n                            <span className=\"CountWheel\"> \n                                <ProgressCircle strokeWidth={10} percentage={progressCirclePercentage} text={progressCircleText} style={progressCircleStyle}/> \n                            </span>\n                            | \n                            <span className=\"PlusIcon\"> \n                                <PlusCircleIcon /> \n                            </span>\n                        </div>\n                        <div className=\"SubmitBtnHolder\">\n                            <button className=\"SubmitBtn\">Tweet</button>\n                        </div>\n                    </div>\n                </div>\n            </div> \n        </div>\n    );\n}\n\nexport default TweetForm;","/home/zentech/projects/twitter-app/src/main_components/ProgressCircle.js",[],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"38","replacedBy":"42"},{"ruleId":"40","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":19,"column":33,"nodeType":"46","messageId":"47","endLine":19,"endColumn":55},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],["48"],["49"],"no-unused-vars","'setProgressCircleStyle' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]